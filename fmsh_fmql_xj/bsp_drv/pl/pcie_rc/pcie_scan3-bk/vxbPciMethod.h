/*
 * Copyright (c) 2016 Wind River Systems, Inc.
 *
 * The right to copy, distribute, modify or otherwise make use
 * of this software may be licensed only pursuant to the terms
 * of an applicable Wind River license agreement.
 */

/*
 *  DO NOT MODIFY THIS FILE MANUALLY
 *
 *  This file is automatically generated from
 *  the method file (extended with *.m).
 *
 */
#include "vxbPciLib3.h"
#include "dllLib3.h"

/*
#define ROOT_CFG_OUT_BASE_ADDR 0x6c000000
#define ROOT_CFG_OUT_SIZE 0x10000

#define ROOT_PORT_BUS_NUM 0x1
#define ROOT_PORT_DEV_NUM 0x0
#define ROOT_PORT_FUNC_NUM 0x0
*/

#define TYPE0 0x4
#define TYPE1 0x5

#define STATUS int
#define UINT8 unsigned char
#define UINT16 unsigned short
#define UINT32 unsigned int

#define VXB_DEV_ID3 UINT32

#if 0
#ifndef _INCvxbPciMethodh
#define _INCvxbPciMethodh

VXB_DEVMETHOD_DECL(vxbPciCfgRead)
typedef STATUS vxbPciCfgRead_t (VXB_DEV_ID3 pDev,  PCI_HARDWARE_3 * pciDev, UINT32 offset, UINT32 width, void * data);
STATUS VXB_PCI_CFG_READ_3 (VXB_DEV_ID3 pDev,  PCI_HARDWARE_3 * pciDev, UINT32 offset, UINT32 width, void * data);

VXB_DEVMETHOD_DECL(vxbPciCfgWrite)
typedef STATUS vxbPciCfgWrite_t (VXB_DEV_ID3 pDev,  PCI_HARDWARE_3 * pciDev, UINT32 offset,UINT32 width, UINT32 data);
STATUS VXB_PCI_CFG_WRITE_3 (VXB_DEV_ID3 pDev,  PCI_HARDWARE_3 * pciDev, UINT32 offset,UINT32 width, UINT32 data);

VXB_DEVMETHOD_DECL(vxbPciIntAssign)
typedef STATUS vxbPciIntAssign_t (VXB_DEV_ID3 pDev, PCI_HARDWARE_3 * pciDev, int pin, UINT8 * interrupt, VXB_INTR_ENTRY * pIntrEntry);
STATUS VXB_PCI_INT_ASSIGN (VXB_DEV_ID3 pDev, PCI_HARDWARE_3 * pciDev, int pin, UINT8 * interrupt, VXB_INTR_ENTRY * pIntrEntry);

VXB_DEVMETHOD_DECL(vxbPcieErrRecovery)
typedef STATUS vxbPcieErrRecovery_t (VXB_DEV_ID3 pDev);
STATUS VXB_PCIE_ERR_RECOVERY (VXB_DEV_ID3 pDev);

VXB_DEVMETHOD_DECL(vxbPcieLinkReset)
typedef STATUS vxbPcieLinkReset_t (VXB_DEV_ID3 pDev);
STATUS VXB_PCIE_LINK_RESET (VXB_DEV_ID3 pDev);

#endif /* _INCvxbPciMethodh */
#endif

STATUS VXB_PCI_CFG_READ_3 (VXB_DEV_ID3 pDev, PCI_HARDWARE_3 * pciDev, UINT32 offset, UINT32 width, void * data);

STATUS VXB_PCI_CFG_WRITE_3 (VXB_DEV_ID3 pDev, PCI_HARDWARE_3 * pciDev, UINT32 offset,UINT32 width, UINT32 data);


